
#STRUCTURAL OBJECT TYPING:

In TypeScript, structural typing is a type system that focuses on the shape or structure of a type rather than its explicit declaration. Two types are considered compatible if they have the same structure, regardless of their declared names. This is often referred to as "duck typing."

TypeScript is a Structural Type System. A structural type
system means that when comparing types, TypeScript only
takes into account the members on the type.

This is in contrast to nominal type systems, where you
could create two types but could not assign them to each
other.

[Type Compatibility](https://www.typescriptlang.org/docs/handbook/type-compatibility.html)

[Freshness](https://basarat.gitbook.io/typescript/type-system/freshness)

[Structural Typing & Duck Typing in TypeScript](https://www.tektutorialshub.com/typescript/structural-typing-duck-typing-in-typescript/)

[Future TypeScript version may support Nominal Types](https://github.com/Microsoft/TypeScript/issues/202)